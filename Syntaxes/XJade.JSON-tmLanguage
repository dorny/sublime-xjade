{
  "name": "XJade",
  "scopeName": "source.xjade",
  "fileTypes": ["xjade"],
  "patterns": [
    { "include": "#shebang" },
    { "include": "#expression" }
  ],

  "repository": {
    "shebang": {
      "comment": "node.js shebang",
      "name": "comment.line.js",
      "match": "^#![\\S]+ node"
    },

    "expression": {
      "name": "source.js",
      "comment": "The main building block",
      "patterns": [
        { "include": "#comment" },
        { "include": "#module-expression" },
        { "include": "#class-expression" },
        { "include": "#function" },
        { "include": "#block" },
        { "include": "#string" },
        { "include": "#regexp" },
        { "include": "#misc-higlighting" }
      ]
    },

    "string-quoted-single": {
      "name": "string.quoted.single.js",
      "begin": "'",
      "end": "'",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.js" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.js" }
      },
      "patterns": [
        {
          "name": "constant.character.escape.js",
          "match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
        }
      ]
    },
    "string-quoted-double": {
      "name": "string.quoted.double.js",
      "begin": "\"",
      "end": "\"",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.js" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.js" }
      },
      "patterns": [
        {
          "name": "constant.character.escape.js",
          "match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
        }
      ]
    },
    "string": {
      "name": "string.js",
      "patterns": [
        { "include": "#string-quoted-single" },
        { "include": "#string-quoted-double" }
      ]
    },

    "number": {
      "name": "constant.numeric.js",
      "match": "[0-9]+"
    },

    "regexp": {
      "begin": "(?<=[=(:]|^|return|&&|\\|\\||!)\\s*(/)(?![/*+{}?])",
      "end": "(/)[igm]*",
      "name": "string.regexp.js",
      "endCaptures": {
        "1": { "name": "punctuation.definition.string.end.js" }
      },
      "beginCaptures": {
        "1": { "name": "punctuation.definition.string.begin.js" }
      },
      "patterns": [
        {
          "name": "constant.character.escape.js",
          "match": "\\\\."
        }
      ]
    },



    "comment-block-doc": {
      "name": "comment.block.documentation.js",
      "begin": "/\\*\\*(?!/)",
      "end": "\\*/",
      "captures": {
        "0": { "name": "punctuation.definition.comment.js" }
      }
    },
    "comment-block": {
      "name": "comment.block.js",
      "begin": "/\\*",
      "end": "\\*/",
      "captures": {
        "0": { "name": "punctuation.definition.comment.js" }
      }
    },
    "comment-block-html": {
      "name": "comment.block.html.js",
      "match": "(<!--|-->)",
      "captures":  {
        "0": { "name": "punctuation.definition.comment.html.js" },
        "2": { "name": "punctuation.definition.comment.html.js" }
      }
    },
    "comment-line": {
      "name": "comment.line.double-slash.js",
      "match": "(//).*$\n?",
      "captures": {
        "1": { "name": "punctuation.definition.comment.js" }
      }
    },
    "comment": {
      "name": "comment.js",
      "patterns": [
        { "include": "#comment-block-doc" },
        { "include": "#comment-block" },
        { "include": "#comment-block-html" },
        { "include": "#comment-line" }
      ]
    },



    "block-braces-round": {
      "name": "meta.expression.braces.round",
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "meta.brace.round.js" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.round.js" }
      },
      "patterns": [
        { "include": "#expression" }
      ]
    },
    "block-braces-curly": {
      "name": "meta.expression.braces.curly",
      "begin": "\\{",
      "end": "\\}",
      "beginCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "patterns": [
        { "include": "#expression" }
      ]
    },
    "block-braces-square": {
      "name": "meta.expression.braces.square",
      "begin": "\\[",
      "end": "\\]",
      "beginCaptures": {
        "0": { "name": "meta.brace.square.ts" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.square.ts" }
      },
      "patterns": [
        { "include": "#expression" }
      ]
    },
    "block": {
      "name": "block.js",
      "patterns": [
        { "include": "#block-braces-curly" },
        { "include": "#block-braces-round" },
        { "include": "#block-braces-square" }
      ]
    },



    "module-expression": {
      "name": "meta.module.js",
      "begin": "\\b(module)\\b(?:\\s+([a-zA-Z_$][\\w$]*))?",
      "end": "(?=\\})",
      "beginCaptures": {
        "1": { "name": "storage.type.module.js" },
        "2": { "name": "entity.name.type.module.js" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "patterns": [
        { "include": "#expression" }
      ]
    },

    "class-expression": {
      "name": "meta.class.js",
      "begin": "\\b(class|interface)\\b(?:\\s+([a-zA-Z_$][\\w$]*))?",
      "end": "(?=\\})",
      "beginCaptures": {
        "1": { "name": "storage.type.class.js" },
        "2": { "name": "entity.name.type.class.js" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "patterns": [
        { "include": "#comment" },
        { "include": "#meta-class-body" },
        { "include": "#expression" }
      ]
    },
    "meta-storage-modifier": {
      "name": "storage.modifier.js",
      "match": "\\b(const|export|extends|final|implements|native|private|protected|public|static|synchronized|throws|transient|volatile)\\b"
    },
    "meta-variable-type": {
      "begin":":",
      "end": "(?=[,);=])",
      "patterns": [
        { "include": "#expression" }
      ]
    },
    "meta-variable-initializer": {
      "begin": "(=)",
      "end": "(?=[,);=])",
      "beginCaptures": {
        "1": { "name": "keyword.operator.ts" }
      },
      "patterns": [
        { "include": "#expression" }
      ]
    },
    "meta-class-body": {
      "name": "meta.expression.body.class",
      "begin": "\\{",
      "end": "(?=\\})",
      "beginCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "endCaptures": {},
      "patterns": [
        { "include": "#comment" },
        { "include": "#meta-storage-modifier" },
        { "include": "#template" },
        { "include": "#meta-class-member-attribute" },
        { "include": "#meta-class-member-method" }
      ]
    },
    "meta-class-member-attribute": {
      "begin": "\\b([a-zA-Z_$][\\w$]*)\\s*(?=(=|:))",
      "end": "(;)",
      "beginCaptures": {
        "1": { "name": "meta.toc-list.class.member.ts" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.terminator.statement.ts" }
      },
      "patterns": [
        { "include": "#meta-variable-type" },
        { "include": "#meta-variable-initializer" }
      ]
    },
    "meta-class-member-method": {
      "name": "meta.class.member.js",
      "begin": "\\b(?:(get|set)\\s+)?([a-zA-Z_$][\\w$]*)\\s*(?=\\()",
      "end": "(\\})|(;)",
      "beginCaptures": {
        "1": { "name": "storage.type.property.js" },
        "2": { "name": "entity.name.function.js" }
      },
      "endCaptures": {
        "1": { "name": "meta.brace.curly.js" },
        "2": { "name": "punctuation.terminator.statement.js" }
      },
      "patterns": [
        { "include": "#comment" },
        { "include": "#meta-function-parameters" },
        { "include": "#misc-higlighting" },
        { "include": "#meta-function-body" }
      ]
    },

    "meta-function-parameters": {
      "name": "meta.expression.body.class",
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.parameters.begin.js" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.parameters.end.js" }
      },
      "patterns": [
        { "include": "#comment" },
        { "include": "#meta-storage-modifier" },
        {
          "name": "variable.parameter.function.js",
          "match": "[a-zA-Z_$][\\w$]*"
        },
        { "include": "#meta-variable-type" }
      ]
    },
    "meta-function-body": {
      "name": "meta.expression.body.function",
      "begin": "\\{",
      "end": "(?=\\})",
      "beginCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "patterns": [
        { "include": "#expression" }
      ]
    },

    "mtea-function-assignment": {
      "match": "\\b([a-zA-Z_?.$][\\w?.$]*)\\s*(=|:)\\s*(?=(\\bfunction\\b))",
      "captures": {
          "1": { "name": "entity.name.function.js" },
          "2": { "name": "keyword.operator.js" }
      }
    },

    "mtea-function-assignment-quoted": {
      "match": "(?:((')([^']*)('))|((\")([^\"]+)(\")))\\s*:\\s*(?=\\bfunction\\b)",
      "captures": {
          "1": { "name": "string.quoted.single.js" },
          "2": { "name": "punctuation.definition.string.begin.js" },
          "3": { "name": "entity.name.function.js" },
          "4": { "name": "punctuation.definition.string.end.js" },
          "5": { "name": "string.quoted.double.js" },
          "6": { "name": "punctuation.definition.string.begin.js" },
          "7": { "name": "entity.name.function.js" },
          "8": { "name": "punctuation.definition.string.end.js" }
      }
    },
    "meta-function-template": {
      "begin": "\\b(function)\\s+(?=(@template))",
      "end": "\\}",
      "beginCaptures": {
        "0": { "name": "meta.function.js" },
        "1": { "name": "storage.type.function.js" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "patterns": [
        { "include": "#template" }
      ]
    },
    "mate-function": {
      "begin": "\\b(function)(?:\\s+([a-zA-Z_?.$][\\w?.$]*))?\\s*",
      "end": "(\\})|(;)",
      "beginCaptures": {
        "1": { "name": "storage.type.property.js" },
        "2": { "name": "entity.name.function.js" }
      },
      "beginCaptures": {
        "0": { "name": "meta.function.js" },
        "1": { "name": "storage.type.function.js" },
        "2": { "name": "entity.name.function.js" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.js" }
      },
      "patterns": [
        { "include": "#comment" },
        { "include": "#meta-function-parameters" },
        { "include": "#meta-function-body" },
        { "include": "#misc-higlighting" }
      ]
    },
    "function": {
      "name": "meta.function.js",
      "patterns": [
        { "include": "#meta-function-assignment" },
        { "include": "#meta-function-assignment-quoted" },
        { "include": "#meta-function-template" },
        { "include": "#meta-function" }
      ]
    },


    "misc-higlighting": {
      "name": "misc.js",
      "comment": "This patterns are not affecting scope rules and are usefull for higlighting purposes only",
      "patterns": [
        {
          "name": "meta.class.instance.constructor",
          "match": "(new)\\s+(\\w+(?:\\.[\\w$]*)*)",
          "captures": {
            "1": { "name": "keyword.operator.new.js" },
            "2": { "name": "entity.name.type.instance.js" }
          }
        },
        {
          "name": "meta.object.js.firebug",
          "match": "\\b(console)\\.(warn|info|log|error|time|timeEnd|assert)\\b",
          "captures": {
            "1": { "name": "entity.name.type.object.js.firebug" },
            "2": { "name": "support.function.js.firebug" }
          }
        },
        {
          "name": "entity.name.type.object.js.firebug",
          "match": "\\b(console)\\b"
        },
        {
          "name": "constant.numeric.js",
          "match": "\\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?))\\b"
        },
        {
          "name": "storage.type.js",
          "match": "\\b(boolean|byte|char|class|double|enum|float|function|int|interface|long|number|short|string|var|void)\\b"
        },
        {
          "include": "#meta-storage-modifier"
        },
        {
          "name": "keyword.control.js",
          "match": "\\b(break|case|catch|continue|declare|default|do|else|finally|for|goto|if|import|package|return|switch|throw|try|while)\\b"
        },
        {
          "name": "keyword.operator.js",
          "match": "\\b(delete|in|instanceof|new|typeof|with)\\b"
        },
        {
          "name": "constant.language.boolean.true.js",
          "match": "\\btrue\\b"
        },
        {
          "name": "constant.language.boolean.false.js",
          "match": "\\bfalse\\b"
        },
        {
          "name": "constant.language.null.js",
          "match": "\\bnull\\b"
        },
        {
          "name": "support.constant.js",
          "match": "\\b(super|this)\\b"
        },
        {
          "name": "meta.prototype.js",
          "match": "(\\.)(prototype|__proto__)\\b",
          "captures": {
            "1": { "name": "meta.delimiter.method.period.js" },
            "2": { "name": "support.constant.js" }
          }
        },
        {
          "name": "keyword.other.js",
          "match": "\\b(debugger)\\b"
        },
        {
          "name": "support.class.js",
          "match": "\\b(Anchor|Applet|Area|Array|Boolean|Button|Checkbox|Date|document|event|FileUpload|Form|Frame|Function|Hidden|History|Image|JavaArray|JavaClass|JavaObject|JavaPackage|java|Layer|Link|Location|Math|MimeType|Number|navigator|netscape|Object|Option|Packages|Password|Plugin|Radio|RegExp|Reset|Select|String|Style|Submit|screen|sun|Text|Textarea|window|XMLHttpRequest)\\b"
        },
        {
          "name": "support.function.js",
          "match": "\\b(require|module\\.exports|module\\.id|exports)\\b"
        },
        {
          "name": "support.function.js",
          "match": "\\b(s(h(ift|ow(Mod(elessDialog|alDialog)|Help))|croll(X|By(Pages|Lines)?|Y|To)?|t(op|rike)|i(n|zeToContent|debar|gnText)|ort|u(p|b(str(ing)?)?)|pli(ce|t)|e(nd|t(Re(sizable|questHeader)|M(i(nutes|lliseconds)|onth)|Seconds|Ho(tKeys|urs)|Year|Cursor|Time(out)?|Interval|ZOptions|Date|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(ome|andleEvent)|navigate|c(har(CodeAt|At)|o(s|n(cat|textual|firm)|mpile)|eil|lear(Timeout|Interval)?|a(ptureEvents|ll)|reate(StyleSheet|Popup|EventObject))|t(o(GMTString|S(tring|ource)|U(TCString|pperCase)|Lo(caleString|werCase))|est|a(n|int(Enabled)?))|i(s(NaN|Finite)|ndexOf|talics)|d(isableExternalCapture|ump|etachEvent)|u(n(shift|taint|escape|watch)|pdateCommands)|j(oin|avaEnabled)|p(o(p|w)|ush|lugins.refresh|a(ddings|rse(Int|Float)?)|r(int|ompt|eference))|e(scape|nableExternalCapture|val|lementFromPoint|x(p|ec(Script|Command)?))|valueOf|UTC|queryCommand(State|Indeterm|Enabled|Value)|f(i(nd|le(ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(nt(size|color)|rward)|loor|romCharCode)|watch|l(ink|o(ad|g)|astIndexOf)|a(sin|nchor|cos|t(tachEvent|ob|an(2)?)|pply|lert|b(s|ort))|r(ou(nd|teEvents)|e(size(By|To)|calc|turnValue|place|verse|l(oad|ease(Capture|Events)))|andom)|g(o|et(ResponseHeader|M(i(nutes|lliseconds)|onth)|Se(conds|lection)|Hours|Year|Time(zoneOffset)?|Da(y|te)|UTC(M(i(nutes|lliseconds)|onth)|Seconds|Hours|Da(y|te)|FullYear)|FullYear|A(ttention|llResponseHeaders)))|m(in|ove(B(y|elow)|To(Absolute)?|Above)|ergeAttributes|a(tch|rgins|x))|b(toa|ig|o(ld|rderWidths)|link|ack))\\b(?=\\()"
        },
        {
          "name": "support.function.dom.js",
          "match": "\\b(s(ub(stringData|mit)|plitText|e(t(NamedItem|Attribute(Node)?)|lect))|has(ChildNodes|Feature)|namedItem|c(l(ick|o(se|neNode))|reate(C(omment|DATASection|aption)|T(Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(ntityReference|lement)|Attribute))|tabIndex|i(nsert(Row|Before|Cell|Data)|tem)|open|delete(Row|C(ell|aption)|T(Head|Foot)|Data)|focus|write(ln)?|a(dd|ppend(Child|Data))|re(set|place(Child|Data)|move(NamedItem|Child|Attribute(Node)?)?)|get(NamedItem|Element(sBy(Name|TagName)|ById)|Attribute(Node)?)|blur)\\b(?=\\()"
        },
        {
          "name": "support.constant.js",
          "match": "(?<=\\.)(s(ystemLanguage|cr(ipts|ollbars|een(X|Y|Top|Left))|t(yle(Sheets)?|atus(Text|bar)?)|ibling(Below|Above)|ource|uffixes|e(curity(Policy)?|l(ection|f)))|h(istory|ost(name)?|as(h|Focus))|y|X(MLDocument|SLDocument)|n(ext|ame(space(s|URI)|Prop))|M(IN_VALUE|AX_VALUE)|c(haracterSet|o(n(structor|trollers)|okieEnabled|lorDepth|mp(onents|lete))|urrent|puClass|l(i(p(boardData)?|entInformation)|osed|asses)|alle(e|r)|rypto)|t(o(olbar|p)|ext(Transform|Indent|Decoration|Align)|ags)|SQRT(1_2|2)|i(n(ner(Height|Width)|put)|ds|gnoreCase)|zIndex|o(scpu|n(readystatechange|Line)|uter(Height|Width)|p(sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(i(splay|alog(Height|Top|Width|Left|Arguments)|rectories)|e(scription|fault(Status|Ch(ecked|arset)|View)))|u(ser(Profile|Language|Agent)|n(iqueID|defined)|pdateInterval)|_content|p(ixelDepth|ort|ersonalbar|kcs11|l(ugins|atform)|a(thname|dding(Right|Bottom|Top|Left)|rent(Window|Layer)?|ge(X(Offset)?|Y(Offset)?))|r(o(to(col|type)|duct(Sub)?|mpter)|e(vious|fix)))|e(n(coding|abledPlugin)|x(ternal|pando)|mbeds)|v(isibility|endor(Sub)?|Linkcolor)|URLUnencoded|P(I|OSITIVE_INFINITY)|f(ilename|o(nt(Size|Family|Weight)|rmName)|rame(s|Element)|gColor)|E|whiteSpace|l(i(stStyleType|n(eHeight|kColor))|o(ca(tion(bar)?|lName)|wsrc)|e(ngth|ft(Context)?)|a(st(M(odified|atch)|Index|Paren)|yer(s|X)|nguage))|a(pp(MinorVersion|Name|Co(deName|re)|Version)|vail(Height|Top|Width|Left)|ll|r(ity|guments)|Linkcolor|bove)|r(ight(Context)?|e(sponse(XML|Text)|adyState))|global|x|m(imeTypes|ultiline|enubar|argin(Right|Bottom|Top|Left))|L(N(10|2)|OG(10E|2E))|b(o(ttom|rder(Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(Color|Image)))\\b"
        },
        {
          "name": "support.constant.dom.js",
          "match": "(?<=\\.)(s(hape|ystemId|c(heme|ope|rolling)|ta(ndby|rt)|ize|ummary|pecified|e(ctionRowIndex|lected(Index)?)|rc)|h(space|t(tpEquiv|mlFor)|e(ight|aders)|ref(lang)?)|n(o(Resize|tation(s|Name)|Shade|Href|de(Name|Type|Value)|Wrap)|extSibling|ame)|c(h(ildNodes|Off|ecked|arset)?|ite|o(ntent|o(kie|rds)|de(Base|Type)?|l(s|Span|or)|mpact)|ell(s|Spacing|Padding)|l(ear|assName)|aption)|t(ype|Bodies|itle|Head|ext|a(rget|gName)|Foot)|i(sMap|ndex|d|m(plementation|ages))|o(ptions|wnerDocument|bject)|d(i(sabled|r)|o(c(type|umentElement)|main)|e(clare|f(er|ault(Selected|Checked|Value)))|at(eTime|a))|useMap|p(ublicId|arentNode|r(o(file|mpt)|eviousSibling))|e(n(ctype|tities)|vent|lements)|v(space|ersion|alue(Type)?|Link|Align)|URL|f(irstChild|orm(s)?|ace|rame(Border)?)|width|l(ink(s)?|o(ngDesc|wSrc)|a(stChild|ng|bel))|a(nchors|c(ce(ssKey|pt(Charset)?)|tion)|ttributes|pplets|l(t|ign)|r(chive|eas)|xis|Link|bbr)|r(ow(s|Span|Index)|ules|e(v|ferrer|l|adOnly))|m(ultiple|e(thod|dia)|a(rgin(Height|Width)|xLength))|b(o(dy|rder)|ackground|gColor))\\b"
        },
        {
          "name": "support.constant.dom.js",
          "match": "\\b(ELEMENT_NODE|ATTRIBUTE_NODE|TEXT_NODE|CDATA_SECTION_NODE|ENTITY_REFERENCE_NODE|ENTITY_NODE|PROCESSING_INSTRUCTION_NODE|COMMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE|DOCUMENT_FRAGMENT_NODE|NOTATION_NODE|INDEX_SIZE_ERR|DOMSTRING_SIZE_ERR|HIERARCHY_REQUEST_ERR|WRONG_DOCUMENT_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR|NOT_SUPPORTED_ERR|INUSE_ATTRIBUTE_ERR)\\b"
        },
        {
          "name": "support.function.event-handler.js",
          "match": "\\bon(R(ow(s(inserted|delete)|e(nter|xit))|e(s(ize(start|end)?|et)|adystatechange))|Mouse(o(ut|ver)|down|up|move)|B(efore(cut|deactivate|u(nload|pdate)|p(aste|rint)|editfocus|activate)|lur)|S(croll|top|ubmit|elect(start|ionchange)?)|H(over|elp)|C(hange|ont(extmenu|rolselect)|ut|ellchange|l(ick|ose))|D(eactivate|ata(setc(hanged|omplete)|available)|r(op|ag(start|over|drop|en(ter|d)|leave)?)|blclick)|Unload|P(aste|ropertychange)|Error(update)?|Key(down|up|press)|Focus|Load|A(ctivate|fter(update|print)|bort))\\b"
        },
        {
          "name": "keyword.operator.js",
          "match": "!|\\$|%|&|\\*|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|\\*=|(?<!\\()/=|%=|\\+=|\\-=|&=|\\^=|\\b(in|instanceof|new|delete|typeof|void)\\b"
        },
        {
          "name": "constant.language.js",
          "match": "\\b(Infinity|NaN|undefined)\\b"
        },
        {
          "name": "punctuation.terminator.statement.js",
          "match": "\\;"
        },
        {
          "name": "meta.delimiter.object.comma.js",
          "match": ",[ |\\t]*"
        },
        {
          "name": "meta.delimiter.method.period.js",
          "match": "\\."
        },
        {
          "name": "meta.brace.square.js",
          "match": "\\[|\\]"
        }
      ]
    },



    "template": {
      "begin": "(@template)(?:\\s+([a-zA-Z$_][\\w$]*))?",
      "beginCaptures": {
        "1": { "name": "storage.type.template.xjade"},
        "2": { "name": "entity.name.function.js"}
      },
      "end": "(?=\\})",
      "patterns": [
        { "include": "#comment" },
        { "include": "#meta-function-parameters"},
        { "include": "#meta-template-body"}
      ]
    },
    "meta-template-body": {
      "name": "source.xjade.js",
      "begin": "\\{",
      "end": "(?=\\})",
      "beginCaptures": {
        "0": { "name": "meta.brace.curly.xjade" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.xjade" }
      },
      "patterns": [{ "include": "#meta-tag-body-elements" }]
    },
    "meta-tag-body-block": {
      "name": "source.xjade.js",
      "begin": "\\{",
      "end": "(\\})",
      "beginCaptures": {
        "0": { "name": "meta.brace.curly.xjade" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.xjade" }
      },
      "patterns": [{ "include": "#meta-tag-body-elements" }]
    },
    "meta-tag-body-elements": {
      "patterns": [
        { "include": "#comment" },
        { "include": "#string" },
        { "include": "#tag" },
        { "include": "#tag-attributes" },
        { "include": "#tag-body-block" },
        { "include": "#code-line" },
        { "include": "#code-block" },
        { "include": "#code-text" },
        { "include": "#meta-tag-body-block" },
        { "include": "#meta-template-misc" }
      ]
    },

    "tag": {
      "match": "([a-zA-Z][a-zA-Z0-9_:-]*)?(#([a-zA-Z][a-zA-Z0-9_:-]*))?((\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*)*)",
      "captures": {
        "1": {"name": "entity.name.tag.xml.html"},
        "2": {"name": "variable.parameter.id.xjade"},
        "3": {"name": "meta.toc-list.id.xjade"},
        "4": {"name": "constant.language.class.xjade"}
      }
    },
    "tag-attributes": {
      "name": "meta.expression.braces.square",
      "begin": "(\\[)",
      "beginCaptures": {
        "1": {"name": "meta.brace.square.xjade"}
      },
      "end": "(\\])",
      "endCaptures": {
        "1": {"name": "meta.brace.square.xjade"}
      },
      "patterns": [
        { "include": "#comment" },
        { "include": "#tag-attribute-name" },
        { "include": "#tag-conditional-class-name" },
        { "include": "#tag-attribute-value" }
      ]
    },
    "tag-attribute-name": {
      "match": "([a-zA-Z][a-zA-Z0-9_:.-]*)",
      "captures": {
        "1": {"name":"entity.other.attribute-name.xjade"}
      }
    },
    "tag-conditional-class-name": {
      "match": "\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*",
      "name": "constant.language.class.xjade"
    },
    "tag-attribute-value": {
      "patterns": [
        { "include": "#string" },
        { "include": "#number" },
        { "include": "#code-value" }
      ]
    },

    "code-value": {
      "name": "source.js",
      "begin": "(\\()",
      "beginCaptures": {
        "1": {"name": "meta.brace.round.js"}
      },
      "end": "(\\))",
      "endCaptures": {
        "1": {"name": "meta.brace.round.js"}
      },
      "patterns": [{ "include": "#expression" }]
    },
    "code-line": {
      "name": "source.js",
      "begin": "^\\s*-\\s+",
      "end": "$",
      "patterns": [
        { "include": "#comment" },
        { "include": "#string" },
        { "include": "#regexp" },
        { "include": "#misc-higlighting" }
      ]
    },
    "code-block": {
      "name": "source.js",
      "begin": "(\\{\\{)",
      "beginCaptures": {
        "1": {"name": "meta.brace.curly.xjade"}
      },
      "end": "(\\}\\})",
      "endCaptures": {
        "1": {"name": "meta.brace.curly.xjade"}
      },
      "patterns": [{ "include": "#expression" }]
    },
    "code-text": {
      "name": "source.js",
      "begin": "(\\$)(\\{)",
      "beginCaptures": {
        "1": {"name": "keyword.operator.xjade"},
        "2": {"name": "meta.brace.curly"}
      },
      "end": "(\\})",
      "endCaptures": {
        "1": {"name": "meta.brace.curly"}
      },
      "patterns": [{ "include": "#expression" }]
    },

    "meta-template-misc": {
      "match": "=|>"
    }
  },

  "uuid": "a6009cd0-e8f6-4358-85ec-90c95b772b9d"
}
