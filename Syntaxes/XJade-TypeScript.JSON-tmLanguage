{
  "name": "XJade - TypeScript",
  "scopeName": "source.ts.tpl",
  "fileTypes": [ "ts-tpl" ],

  "patterns": [
    { "include": "#string" },
    { "include": "#regexp" },
    { "include": "#comment" },

    { "include": "#template"},

    { "include": "source.ts" }
  ],

  "repository": {

    "template": {
      "begin": "\\b(?:(function)|(public|private))\\s+(template\\*)(\\s+([a-zA-Z$_][\\w$]*))?",
      "beginCaptures": {
        "1": { "name": "storage.type.function.ts"},
        "2": { "name": "storage.modifier.ts"},
        "3": { "name": "storage.type.function.ts"},
        "4": { "name": "entity.name.function.ts"}
      },
      "end": "(?<=\\})",
      "patterns": [
        { "include": "#template-args"},
        { "include": "#template-body"}
      ]
    },
    "template-args": {
      "name": "meta.expression.braces.round",
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "meta.brace.round.ts" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.round.ts" }
      },
      "patterns": [
        { "include": "source.ts" }
      ]
    },
    "template-body": {
      "name": "source.xjade.ts",
      "begin": "\\{",
      "end": "\\}",
      "beginCaptures": {
        "0": { "name": "meta.brace.curly.xjade" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.curly.xjade" }
      },
      "patterns": [{ "include": "#template-body-elements" }]
    },

    "template-body-elements": {
      "patterns": [
        { "include": "#comment" },
        { "include": "#string" },
        { "include": "#tag" },
        { "include": "#tag-inline" },
        { "include": "#tag-attributes" },
        { "include": "#code-line" },
        { "include": "#code-block" },
        { "include": "#code-text" }
      ]
    },

    "comment": {
      "name": "comment.ts",
      "patterns": [
        { "include": "#comment-block-doc" },
        { "include": "#comment-block" },
        { "include": "#comment-line" }
      ]
    },
    "comment-block-doc": {
      "name": "comment.block.documentation.ts",
      "begin": "/\\*\\*(?!/)",
      "end": "\\*/",
      "captures": {
        "0": { "name": "punctuation.definition.comment.ts" }
      }
    },
    "comment-block": {
      "name": "comment.block.ts",
      "begin": "/\\*",
      "end": "\\*/",
      "captures": {
        "0": { "name": "punctuation.definition.comment.ts" }
      }
    },
    "comment-line": {
      "name": "comment.line.double-slash.ts",
      "match": "(//).*$\n?",
      "captures": {
        "1": { "name": "punctuation.definition.comment.ts" }
      }
    },



    "string": {
      "name": "string.ts",
      "patterns": [
        { "include": "#string-quoted-single" },
        { "include": "#string-quoted-double" }
      ]
    },
    "string-quoted-single": {
      "name": "string.quoted.single.ts",
      "begin": "'",
      "end": "'",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.ts" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.ts" }
      },
      "patterns": [
        {
          "name": "constant.character.escape.ts",
          "match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
        }
      ]
    },
    "string-quoted-double": {
      "name": "string.quoted.double.ts",
      "begin": "\"",
      "end": "\"",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.ts" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.ts" }
      },
      "patterns": [
        {
          "name": "constant.character.escape.ts",
          "match": "\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"
        }
      ]
    },



    "regexp": {
      "begin": "(?<=[=(:]|^|return|&&|\\|\\||!)\\s*(/)(?![ /*+{}?])",
      "end": "(/)[igm]*",
      "name": "string.regexp.ts",
      "endCaptures": {
        "1": { "name": "punctuation.definition.string.end.ts" }
      },
      "beginCaptures": {
        "1": { "name": "punctuation.definition.string.begin.ts" }
      },
      "patterns": [
        {
          "name": "constant.character.escape.ts",
          "match": "\\\\."
        }
      ]
    },



    "number": {
      "name": "constant.numeric.ts",
      "match": "[0-9]+"
    },



    "code-line": {
      "begin": "^\\s*-\\s+",
      "end": "$",
      "patterns": [{ "include": "source.ts" }]
    },
    "code-block": {
      "begin": "(\\{)",
      "beginCaptures": {
        "1": {"name": "meta.brace.curly.ts"}
      },
      "end": "(\\})",
      "endCaptures": {
        "1": {"name": "meta.brace.curly.ts"}
      },
      "patterns": [{ "include": "source.ts" }]
    },
    "code-text": {
      "begin": "(\\$)(\\{)",
      "beginCaptures": {
        "1": {"name": "constant.language.directive.mark"},
        "2": {"name": "meta.brace.curly"}
      },
      "end": "(\\})",
      "endCaptures": {
        "1": {"name": "meta.brace.curly"}
      },
      "patterns": [{ "include": "source.ts" }]
    },



    "tag": {
      "match": "([a-zA-Z][a-zA-Z0-9_:-]*)?(#([a-zA-Z][a-zA-Z0-9_:-]*))?((\\.-?[_a-zA-Z]+[_a-zA-Z0-9-]*)*)",
      "captures": {
        "1": {"name": "entity.name.tag.xml.html"},
        "2": {"name": "variable.parameter.id.xjade"},
        "3": {"name": "meta.toc-list.id.xjade"},
        "4": {"name": "constant.language.class.xjade"}
      }
    },
    "tag-inline": {
      "begin": "(#)(\\{)",
      "beginCaptures": {
        "1": {"name": "constant.language.directive.mark"},
        "2": {"name": "meta.brace.curly"}
      },
      "end": "(\\})",
      "endCaptures": {
        "1": {"name": "meta.brace.curly"}
      },
      "patterns": [{ "include": "#template-body-elements" }]
    },
    "tag-attributes": {
      "name": "meta.expression.braces.square",
      "begin": "(\\[)",
      "beginCaptures": {
        "1": {"name": "meta.brace.square.xjade"}
      },
      "end": "(\\])",
      "endCaptures": {
        "1": {"name": "meta.brace.square.xjade"}
      },
      "patterns": [
        { "include": "#comment" },
        { "include": "#tag-attribute-name" },
        { "include": "#tag-attribute-arg" },
        { "include": "#tag-attribute-value" }
      ]
    },
    "tag-attribute-name": {
      "match": "@?([a-zA-Z][a-zA-Z0-9_:.-]*)",
      "captures": {
        "1": {"name":"entity.other.attribute-name.xjade"}
      }
    },
    "tag-attribute-arg": {
      "name": "meta.expression.braces.round",
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "meta.brace.round.ts" }
      },
      "endCaptures": {
        "0": { "name": "meta.brace.round.ts" }
      },
      "patterns": [
        { "include": "#tag-attribute-value" }
      ]
    },
    "tag-attribute-value": {
      "patterns": [
        { "include": "#string" },
        { "include": "#number" },
        { "include": "#code-block" }
      ]
    }
  },

  "uuid": "7b4f5384-7557-419a-a258-ce4c810c311a"
}
